@import url('https://fonts.googleapis.com/css?family=Roboto:700');
@import './../../abstract/themes.scss';

$size: 150px;

.Coming-Soon {
  text-align: center;

  header {
    background-color: #2c2c44;
    // @include themify($themes) {
    //   background-color: themed('backgroundColor');
    // }
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: calc(10px + 2vmin);
    color: white;
    h1 {
      margin: 0;
      position: relative;
      top: 30px;
    }
    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      margin: 0 auto;
      width: 50%;
      .cube,
      .cube * {
        position: absolute;
        width: $size + 1;
        height: $size + 1;
        .sides {
          animation: rotate 3s ease infinite;
          animation-delay: 0.8s;
          transform-style: preserve-3d;
          transform: rotateX(-37.5deg) rotateY(45deg);
        }
      }
      .cube .sides * {
        box-sizing: border-box;
        background-color: rgba(227, 71, 71, 50%);
        border: $size / 10 solid white;
      }

      .text {
        margin-top: $size * 3;
        padding-bottom: 10px;
        color: rgba(227, 71, 71, 1);
        font-size: 1.5rem;
        width: 100%;
        font-weight: 600;
        text-align: center;
      }
    }
  }
}

@keyframes rotate {
  0% {
    transform: rotateX(-37.5deg) rotateY(45deg);
  }
  50% {
    transform: rotateX(-37.5deg) rotateY(405deg);
  }
  100% {
    transform: rotateX(-37.5deg) rotateY(405deg);
  }
}

@mixin side($name, $rotate, $i) {
  .#{$name} {
    animation: #{$name}-animation 3s ease infinite;
    animation-delay: $i * 100ms;
    transform: #{$rotate} translateZ($size);
    animation-fill-mode: forwards;
    transform-origin: 50% 50%;
  }

  @keyframes #{$name}-animation {
    0% {
      opacity: 1;
      transform: #{$rotate} translateZ($size);
    }
    20% {
      opacity: 1;
      transform: #{$rotate} translateZ($size / 2);
    }
    70% {
      opacity: 1;
      transform: #{$rotate} translateZ($size / 2);
    }
    90% {
      opacity: 1;
      transform: #{$rotate} translateZ($size);
    }
    100% {
      opacity: 1;
      transform: #{$rotate} translateZ($size);
    }
  }
}

.cube .sides {
  @include side('top', rotateX(90deg), 0);
  @include side('bottom', rotateX(-90deg), 0);
  @include side('front', rotateY(0deg), 1);
  @include side('back', rotateY(-180deg), 1);
  @include side('left', rotateY(-90deg), 1);
  @include side('right', rotateY(90deg), 1);
}
